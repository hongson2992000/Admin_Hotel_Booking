{"version":3,"file":"static/js/91.2303b186.chunk.js","mappings":"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","sources":["component/ListBookingContainer/ListBookingContainer.js","pages/ListBookingPage/ListBookingPage.js"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\r\nimport \"./ListBookingContainer.scss\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport { Box, Tab } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bookingManageState$ } from \"../../redux/selectors/BookingManageSelector\";\r\nimport * as actions from \"../../redux/actions/BookingManageAction\";\r\nimport * as actionRoom from \"../../redux/actions/RoomManageAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BOOKED,\r\n  CHECKIN,\r\n  CHECKOUT,\r\n  INFO_BOOKING_DETAIL,\r\n  USER_LOGIN,\r\n  USER_ROLE,\r\n} from \"../../utils/constants/settingSystem\";\r\nimport { useEffect } from \"react\";\r\nexport default function ListBookingContainer() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [value, setValue] = React.useState(\"1\");\r\n\r\n  const listBooking = useSelector(bookingManageState$);\r\n  useEffect(() => {\r\n    const userLocal = localStorage.getItem(USER_LOGIN);\r\n    if (userLocal && JSON.parse(userLocal).userRole === USER_ROLE.ADMIN) {\r\n      navigate(\"/overview\");\r\n    } else if (\r\n      userLocal &&\r\n      JSON.parse(userLocal).userRole === USER_ROLE.RECEPTIONIST\r\n    ) {\r\n      navigate(\"/listBooking\");\r\n      dispatch(actions.getAllBooking.getAllBookingRequest());\r\n    } else if (\r\n      userLocal &&\r\n      JSON.parse(userLocal).userRole === USER_ROLE.HOUSEKEEPING\r\n    ) {\r\n      navigate(\"/roomManage\");\r\n      // dispatch(actions.getAllRoom.getAllRoomRequest());\r\n    } else if (\r\n      userLocal &&\r\n      JSON.parse(userLocal).userRole === USER_ROLE.RESTAURANT\r\n    ) {\r\n      navigate(\"/roomManage\");\r\n      // dispatch(actions.getAllRoom.getAllRoomRequest());\r\n    }\r\n  }, [navigate, dispatch]);\r\n  const handleChange = (e, val) => {\r\n    setValue(val);\r\n  };\r\n  const handleFillInfoCheckIn = useCallback(\r\n    (item) => {\r\n      const infoBooking = listBooking.find(\r\n        (bookingItem) => bookingItem.id === item.id\r\n      );\r\n      dispatch(actions.getBookingById.getBookingByIdRequest(infoBooking));\r\n      localStorage.setItem(INFO_BOOKING_DETAIL, JSON.stringify(infoBooking));\r\n      dispatch(\r\n        actionRoom.getRoomAvailability.getRoomAvailabilityRequest({\r\n          booking_id: item.id,\r\n        })\r\n      );\r\n      navigate(\"/checkIn\");\r\n    },\r\n    [navigate, listBooking, dispatch]\r\n  );\r\n  const handleCheckOut = useCallback(\r\n    (id) => {\r\n      dispatch(actions.checkOutRoom.checkOutRoomRequest({ id, navigate }));\r\n    },\r\n    [navigate, dispatch]\r\n  );\r\n  const renderTypeRoom = (roomTypeId) => {\r\n    let roomType = \"\";\r\n    switch (roomTypeId) {\r\n      case 1:\r\n        return (roomType = \"Deluxe King/ Cao cấp\");\r\n      case 2:\r\n        return (roomType = \"Deluxe Twin/ Cao cấp\");\r\n      case 3:\r\n        return (roomType = \"Superior King/ Phòng thường\");\r\n      case 4:\r\n        return (roomType = \"Superior Twin/ Phòng thường\");\r\n      case 5:\r\n        return (roomType = \"Standard King/ Phòng thường\");\r\n      case 6:\r\n        return (roomType = \"Standard Twin/ Phòng thường\");\r\n      default:\r\n        return roomType;\r\n    }\r\n  };\r\n  const renderArr = () => {\r\n    let arrNew = [];\r\n    listBooking.forEach((item) => {\r\n      arrNew.push({\r\n        id: item.id,\r\n        name:\r\n          item.customer?.firstName +\r\n          \" \" +\r\n          item.customer?.middleName +\r\n          \" \" +\r\n          item.customer?.lastName,\r\n        roomType: renderTypeRoom(item.roomTypeId),\r\n        requestService: \"Đưa Đón Sân Bay\",\r\n        arrivalDate: item.arrivalDate,\r\n        departureDate: item.departureDate,\r\n        status: item.status,\r\n      });\r\n      console.log(\r\n        checkIsBefore(\r\n          item.arrivalDate.substring(0, 10),\r\n          moment().format(\"DD/MM/YYYY\")\r\n        )\r\n      );\r\n    });\r\n    return arrNew;\r\n  };\r\n  const renderArrByDateToCheckIn = () => {\r\n    let arrNew = [];\r\n    let currentDate = moment().format(\"DD/MM/YYYY\");\r\n    let listArrivalDate = listBooking.filter(\r\n      (item) =>\r\n        item.arrivalDate.substring(0, 10) === currentDate &&\r\n        item.status === BOOKED\r\n    );\r\n    listArrivalDate.forEach((item) => {\r\n      arrNew.push({\r\n        id: item.id,\r\n        name:\r\n          item.customer?.firstName +\r\n          \" \" +\r\n          item.customer?.middleName +\r\n          \" \" +\r\n          item.customer?.lastName,\r\n        roomType: renderTypeRoom(item.roomTypeId),\r\n        requestService: \"Đưa Đón Sân Bay\",\r\n        arrivalDate: item.arrivalDate,\r\n        departureDate: item.departureDate,\r\n        status: item.status,\r\n        numOfPerson: item.numOfAdult + item.numOfChildren,\r\n        roomTypeId: item.roomTypeId,\r\n      });\r\n    });\r\n    return arrNew;\r\n  };\r\n  const renderArrByDateToCheckOut = () => {\r\n    let arrNew = [];\r\n    let currentDate = moment().format(\"DD/MM/YYYY\");\r\n    let listArrivalDate = listBooking.filter(\r\n      (item) =>\r\n        item.departureDate.substring(0, 10) === currentDate &&\r\n        item.status === CHECKIN\r\n    );\r\n    listArrivalDate.forEach((item) => {\r\n      arrNew.push({\r\n        id: item.id,\r\n        name:\r\n          item.customer?.firstName +\r\n          \" \" +\r\n          item.customer?.middleName +\r\n          \" \" +\r\n          item.customer?.lastName,\r\n        roomType: renderTypeRoom(item.roomTypeId),\r\n        requestService: \"Đưa Đón Sân Bay\",\r\n        arrivalDate: item.arrivalDate,\r\n        departureDate: item.departureDate,\r\n      });\r\n    });\r\n    return arrNew;\r\n  };\r\n  const renderArrCustomerCheckIn = () => {\r\n    let arrNew = [];\r\n    let listArrivalDate = listBooking.filter((item) => item.status === CHECKIN);\r\n    listArrivalDate.forEach((item) => {\r\n      arrNew.push({\r\n        id: item.id,\r\n        name:\r\n          item.customer?.firstName +\r\n          \" \" +\r\n          item.customer?.middleName +\r\n          \" \" +\r\n          item.customer?.lastName,\r\n        roomType: renderTypeRoom(item.roomTypeId),\r\n        requestService: \"Đưa Đón Sân Bay\",\r\n        arrivalDate: item.arrivalDate,\r\n        departureDate: item.departureDate,\r\n        status: item.status,\r\n        numOfPerson: item.numOfAdult + item.numOfChildren,\r\n        roomTypeId: item.roomTypeId,\r\n      });\r\n    });\r\n    return arrNew;\r\n  };\r\n  const allBooking = useMemo(\r\n    () => [\r\n      {\r\n        field: \"id\",\r\n        headerName: \"Mã Đặt Phòng\",\r\n        width: 150,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.id}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"name\",\r\n        headerName: \"Tên Khách Đặt\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.name}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"roomType\",\r\n        headerName: \"Loại Phòng\",\r\n        width: 250,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.roomType}</div>;\r\n        },\r\n      },\r\n      // {\r\n      //   field: \"requestService\",\r\n      //   headerName: \"Dịch Vụ Đi Kèm\",\r\n      //   width: 200,\r\n      //   renderCell: (params) => {\r\n      //     return <div className=\"cellWithImg\">{params.row.requestService}</div>;\r\n      //   },\r\n      // },\r\n      {\r\n        field: \"arrivalDate\",\r\n        headerName: \"Ngày Đến\",\r\n        width: 160,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.arrivalDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"departureDate\",\r\n        headerName: \"Ngày Đi\",\r\n        width: 160,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.departureDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"status\",\r\n        headerName: \"Trạng Thái\",\r\n        width: 150,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div\r\n              className={`cellWithImg ${\r\n                params.row.status === CHECKIN\r\n                  ? \"CHECKIN\"\r\n                  : params.row.status === CHECKOUT\r\n                  ? \"CHECKOUT\"\r\n                  : \"BOOKED\"\r\n              }`}\r\n            >\r\n              {params.row.status === BOOKED\r\n                ? \"Đã đặt phòng\"\r\n                : params.row.status === CHECKIN\r\n                ? \"Đang Ở\"\r\n                : \"Đã rời khỏi\"}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const bookingArriveInDay = useMemo(\r\n    () => [\r\n      {\r\n        field: \"id\",\r\n        headerName: \"Mã Đặt Phòng\",\r\n        width: 150,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.id}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"name\",\r\n        headerName: \"Tên Khách Đặt\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.name}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"roomType\",\r\n        headerName: \"Loại Phòng\",\r\n        width: 250,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.roomType}</div>;\r\n        },\r\n      },\r\n      // {\r\n      //   field: \"requestService\",\r\n      //   headerName: \"Dịch Vụ Đi Kèm\",\r\n      //   width: 200,\r\n      //   renderCell: (params) => {\r\n      //     return <div className=\"cellWithImg\">{params.row.requestService}</div>;\r\n      //   },\r\n      // },\r\n      {\r\n        field: \"arrivalDate\",\r\n        headerName: \"Ngày Đến\",\r\n        width: 180,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.arrivalDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"departureDate\",\r\n        headerName: \"Ngày Đi\",\r\n        width: 180,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.departureDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const bookingLeaveInDay = useMemo(\r\n    () => [\r\n      {\r\n        field: \"id\",\r\n        headerName: \"Mã Đặt Phòng\",\r\n        width: 150,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.id}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"name\",\r\n        headerName: \"Tên Khách Đặt\",\r\n        width: 250,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.name}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"roomType\",\r\n        headerName: \"Loại Phòng\",\r\n        width: 250,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.roomType}</div>;\r\n        },\r\n      },\r\n      // {\r\n      //   field: \"requestService\",\r\n      //   headerName: \"Dịch Vụ Đi Kèm\",\r\n      //   width: 200,\r\n      //   renderCell: (params) => {\r\n      //     return <div className=\"cellWithImg\">{params.row.requestService}</div>;\r\n      //   },\r\n      // },\r\n      {\r\n        field: \"arrivalDate\",\r\n        headerName: \"Ngày Đến\",\r\n        width: 180,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.arrivalDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"departureDate\",\r\n        headerName: \"Ngày Đi\",\r\n        width: 180,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.departureDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const customerIsCheckIn = useMemo(\r\n    () => [\r\n      {\r\n        field: \"id\",\r\n        headerName: \"Mã Đặt Phòng\",\r\n        width: 150,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.id}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"name\",\r\n        headerName: \"Tên Khách Đặt\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.name}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"roomType\",\r\n        headerName: \"Loại Phòng\",\r\n        width: 250,\r\n        renderCell: (params) => {\r\n          return <div className=\"cellWithImg\">{params.row.roomType}</div>;\r\n        },\r\n      },\r\n      // {\r\n      //   field: \"requestService\",\r\n      //   headerName: \"Dịch Vụ Đi Kèm\",\r\n      //   width: 200,\r\n      //   renderCell: (params) => {\r\n      //     return <div className=\"cellWithImg\">{params.row.requestService}</div>;\r\n      //   },\r\n      // },\r\n      {\r\n        field: \"arrivalDate\",\r\n        headerName: \"Ngày Đến\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.arrivalDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"departureDate\",\r\n        headerName: \"Ngày Đi\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"cellWithImg\">\r\n              {params.row.departureDate.substring(0, 10)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        field: \"status\",\r\n        headerName: \"Trạng Thái\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div\r\n              className={`cellWithImg ${\r\n                params.row.status === CHECKIN\r\n                  ? \"CHECKIN\"\r\n                  : params.row.status === CHECKOUT\r\n                  ? \"CHECKOUT\"\r\n                  : \"BOOKED\"\r\n              }`}\r\n            >\r\n              {params.row.status === CHECKIN ? \"Đang Ở\" : \" \"}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const actionColumnCheckIn = [\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Hành Động\",\r\n      width: 140,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"cellAction\">\r\n            {params.row.status === CHECKIN ? (\r\n              <div\r\n                className=\"checkInButton\"\r\n                style={{ pointerEvents: \"none\" }}\r\n                // onClick={() =>\r\n                //   handleFillInfoCheckIn(\r\n                //     params.row.id,\r\n                //     params.row.arrivalDate,\r\n                //     // params.row.departureDate,\r\n                //     // params.row.numOfPerson,\r\n                //     // params.row.roomTypeId\r\n                //   )\r\n                // }\r\n              >\r\n                Check In\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className=\"checkInButton\"\r\n                onClick={() => handleFillInfoCheckIn(params.row)}\r\n              >\r\n                Check In\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const actionColumnAllBooking = [\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Hành Động\",\r\n      width: 140,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"cellAction\">\r\n            {checkIsBefore(\r\n              params.row.arrivalDate.substring(0, 10),\r\n              moment().format(\"DD/MM/YYYY\")\r\n            ) ? (\r\n              <div\r\n                className=\"checkInButton\"\r\n                style={{ pointerEvents: \"none\" }}\r\n                // onClick={() =>\r\n                //   handleFillInfoCheckIn(\r\n                //     params.row.id,\r\n                //     params.row.arrivalDate,\r\n                //     // params.row.departureDate,\r\n                //     // params.row.numOfPerson,\r\n                //     // params.row.roomTypeId\r\n                //   )\r\n                // }\r\n              >\r\n                Hủy\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className=\"checkInButton\"\r\n                onClick={() => handleFillInfoCheckIn(params.row)}\r\n              >\r\n                Hủy\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const actionColumnCheckOut = [\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Hành Động\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"cellAction\">\r\n            <div\r\n              className=\"checkInButton\"\r\n              onClick={() => handleCheckOut(params.row.id)}\r\n            >\r\n              Check Out\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const checkIsBefore = (date1, date2) => {\r\n    let arrDate1 = date1.split(\"/\");\r\n    let formatDate1 = arrDate1[2] + \"-\" + arrDate1[1] + \"-\" + arrDate1[0];\r\n    let arrDate2 = date2.split(\"/\");\r\n    let formatDate2 = arrDate2[2] + \"-\" + arrDate2[1] + \"-\" + arrDate2[0];\r\n    console.log(\"Thanh An\", formatDate1 + \"////\" + formatDate2);\r\n    return moment(formatDate1).isBefore(formatDate2);\r\n  };\r\n  return (\r\n    <div className=\"datatableListBooking\">\r\n      <div className=\"datatableTitle\">Danh sách booking</div>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n            <Tab label=\"Tất Cả\" value=\"1\" />\r\n            <Tab label=\"Đến Trong Ngày\" value=\"2\" />\r\n            <Tab label=\"Đi Trong Ngày\" value=\"3\" />\r\n            <Tab label=\"Khách Đang Ở\" value=\"4\" />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value=\"1\">\r\n          <DataGrid\r\n            className=\"datagrid\"\r\n            rows={renderArr()}\r\n            columns={allBooking.concat(actionColumnAllBooking)}\r\n            pageSize={9}\r\n            rowsPerPageOptions={[9]}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value=\"2\">\r\n          <DataGrid\r\n            className=\"datagrid\"\r\n            rows={renderArrByDateToCheckIn()}\r\n            columns={bookingArriveInDay.concat(actionColumnCheckIn)}\r\n            pageSize={9}\r\n            rowsPerPageOptions={[9]}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value=\"3\">\r\n          <DataGrid\r\n            className=\"datagrid\"\r\n            rows={renderArrByDateToCheckOut()}\r\n            columns={bookingLeaveInDay.concat(actionColumnCheckOut)}\r\n            pageSize={9}\r\n            rowsPerPageOptions={[9]}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value=\"4\">\r\n          <DataGrid\r\n            className=\"datagrid\"\r\n            rows={renderArrCustomerCheckIn()}\r\n            columns={customerIsCheckIn}\r\n            pageSize={9}\r\n            rowsPerPageOptions={[9]}\r\n          />\r\n        </TabPanel>\r\n      </TabContext>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ListBookingContainer from \"../../component/ListBookingContainer/ListBookingContainer\";\nimport Navbar from \"../../component/Navbar/Navbar\";\nimport Sidebar from \"../../component/Sidebar/Sidebar\";\nimport { USER_LOGIN, USER_ROLE } from \"../../utils/constants/settingSystem\";\nimport \"./ListBookingPage.scss\";\nimport * as actions from \"../../redux/actions/BookingManageAction\";\nimport { useDispatch } from \"react-redux\";\nexport default function ListBookingPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch;\n  // useEffect(() => {\n  //   // const userLocal = localStorage.getItem(USER_LOGIN);\n  //   // if (userLocal && JSON.parse(userLocal).userRole === USER_ROLE.ADMIN) {\n  //   //   navigate(\"/overview\");\n  //   // } else if (\n  //   //   userLocal &&\n  //   //   JSON.parse(userLocal).userRole === USER_ROLE.HOTEL_MANAGE\n  //   // ) {\n  //   //   navigate(\"/listBooking\");\n     \n  //   // } else if (\n  //   //   userLocal &&\n  //   //   JSON.parse(userLocal).userRole === USER_ROLE.HOUSEKEEPING\n  //   // ) {\n  //   //   navigate(\"/listRoom\");\n  //   // } else if (\n  //   //   userLocal &&\n  //   //   JSON.parse(userLocal).userRole === USER_ROLE.RESTAURANT\n  //   // ) {\n  //   //   navigate(\"/listRoom\");\n  //   // }\n  //   dispatch(actions.getAllBooking.getAllBookingRequest());\n  // }, [navigate, dispatch]);\n  // useEffect(() => {\n  //   const userLocal = localStorage.getItem(USER_LOGIN);\n  //   if (userLocal && JSON.parse(userLocal).userRole === USER_ROLE.ADMIN) {\n  //     navigate(\"/overview\");\n  //   } else if (\n  //     userLocal &&\n  //     JSON.parse(userLocal).userRole === USER_ROLE.HOTEL_MANAGE\n  //   ) {\n  //     navigate(\"/listBooking\");\n  //     // dispatch(actions.getAllBooking.getAllBookingRequest());\n  //   } else if (\n  //     userLocal &&\n  //     JSON.parse(userLocal).userRole === USER_ROLE.HOUSEKEEPING\n  //   ) {\n  //     navigate(\"/listRoom\");\n  //     // dispatch(actions.getAllRoom.getAllRoomRequest());\n  //   } else if (\n  //     userLocal &&\n  //     JSON.parse(userLocal).userRole === USER_ROLE.RESTAURANT\n  //   ) {\n  //     navigate(\"/listRoom\");\n  //     // dispatch(actions.getAllRoom.getAllRoomRequest());\n  //   }\n  // }, [navigate, dispatch]);\n  return (\n    <div className=\"main-screenListBookingPage col-12\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <Sidebar />\n        </div>\n        <div className=\"content-main col-10\">\n          <Navbar />\n          <ListBookingContainer />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["ListBookingContainer","dispatch","useDispatch","navigate","useNavigate","React","value","setValue","listBooking","useSelector","bookingManageState$","useEffect","userLocal","localStorage","getItem","USER_LOGIN","JSON","parse","userRole","USER_ROLE","actions","handleFillInfoCheckIn","useCallback","item","infoBooking","find","bookingItem","id","setItem","INFO_BOOKING_DETAIL","stringify","actionRoom","booking_id","handleCheckOut","renderTypeRoom","roomTypeId","roomType","allBooking","useMemo","field","headerName","width","renderCell","params","className","row","name","arrivalDate","substring","departureDate","status","CHECKIN","CHECKOUT","BOOKED","bookingArriveInDay","bookingLeaveInDay","customerIsCheckIn","actionColumnCheckIn","style","pointerEvents","onClick","actionColumnAllBooking","checkIsBefore","moment","format","actionColumnCheckOut","date1","date2","arrDate1","split","formatDate1","arrDate2","formatDate2","console","log","isBefore","TabContext","Box","sx","borderBottom","borderColor","TabList","onChange","e","val","Tab","label","TabPanel","DataGrid","rows","arrNew","forEach","push","customer","firstName","middleName","lastName","requestService","renderArr","columns","concat","pageSize","rowsPerPageOptions","currentDate","filter","numOfPerson","numOfAdult","numOfChildren","renderArrByDateToCheckIn","renderArrByDateToCheckOut","renderArrCustomerCheckIn","ListBookingPage","Sidebar","Navbar"],"sourceRoot":""}